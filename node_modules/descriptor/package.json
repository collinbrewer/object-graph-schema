{
  "_args": [
    [
      "git+https://collinbrewer@bitbucket.org/collinbrewer/descriptor.git",
      "/Users/collinbrewer/Documents/work/brewer-collective/projects-active/libraries/object-graph-schema"
    ]
  ],
  "_from": "git+https://collinbrewer@bitbucket.org/collinbrewer/descriptor.git",
  "_id": "descriptor@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/descriptor",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://bitbucket.org/collinbrewer/descriptor/raw/master/package.json",
      "httpsUrl": "git+https://collinbrewer@bitbucket.org/collinbrewer/descriptor.git",
      "shortcut": "bitbucket:collinbrewer/descriptor",
      "ssh": "git@bitbucket.org:collinbrewer/descriptor.git",
      "sshUrl": "git+ssh://git@bitbucket.org/collinbrewer/descriptor.git",
      "type": "bitbucket"
    },
    "name": null,
    "raw": "git+https://collinbrewer@bitbucket.org/collinbrewer/descriptor.git",
    "rawSpec": "git+https://collinbrewer@bitbucket.org/collinbrewer/descriptor.git",
    "scope": null,
    "spec": "git+https://collinbrewer@bitbucket.org/collinbrewer/descriptor.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://collinbrewer@bitbucket.org/collinbrewer/descriptor.git#a1af82b064ed6e71f2620069c9f0f2e2789ccd81",
  "_shasum": "5d558ca3a0f35ac5e604612e6769390582da430e",
  "_shrinkwrap": null,
  "_spec": "git+https://collinbrewer@bitbucket.org/collinbrewer/descriptor.git",
  "_where": "/Users/collinbrewer/Documents/work/brewer-collective/projects-active/libraries/object-graph-schema",
  "author": {
    "email": "collin@brewer-collective.com",
    "name": "Collin Brewer"
  },
  "dependencies": {
    "isarray": "0.0.1"
  },
  "description": "Descriptor is an extensible utility for describing and working with criteria in a unified format.",
  "devDependencies": {},
  "gitHead": "a1af82b064ed6e71f2620069c9f0f2e2789ccd81",
  "homepage": "https://bitbucket.org/collinbrewer/descriptor#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "descriptor",
  "optionalDependencies": {},
  "readme": "# Descriptor.js\nDescriptor is an extensible utility for describing and working with criteria in a unified format.\n\nDescriptor is used primarily for:\n- Use a unified format to describe datasets\n- Generating unique keys for caching datasets\n- Parse and stringify into multiple formats\n- Comparing descriptors granularity(which we use for optimizing caches and HTTP requests)\n- Test a value against the parameters of the Descriptor\n- Filter an array for values matching the parameters of the Descriptor\n\n\n## What can you do with it?\n\n### Example\n```javascript\nvar descriptor={entityName:\"Todo\", predicate:\"completed!=true\"};\nvar filter=Descriptor.compile(descriptor);\n\nvar uncompletedTodos=todos.filter(filter);\n```\n\n## What is provided out of the box?\nFor pre-built functionality, including **default** in your project gives you:\n\n   - Exports/Imports JSON, SQL and a non-standardized queryString format\n   - Basic store/collection/object descriptors\n\n### Example\nLet's say you want to extend Descriptor's capability to include a parameter for logging out what's going on.\n\n```javascript\nDescriptor.register(\"shouldLog\", function(objectInDataset, parameterValue){\n\n   if(parameterValue===true)\n   {\n      console.log(objectInDataset)\n   }\n\n   return true; // the object passes the criteria for this test\n});\n```\n\n## Features\n\n1. **Unified**  \nProvides a high-level, unified interface for describing queries/datasets.\n2. **Portable**  \nOutputs discrete, serializable strings that can be used as unique keys.\n3. **Extensible**  \nHas standard query features but offers hooks for teaching it new tricks.\n\n### Unified\nUse Descriptor to describe and represent any dataset.\n\nFor example, HTML elements:\n\n```javascript\nvar navLinkDescriptor=new Descriptor({\n   entityName:\"a\",\n   predicate:\"/href!=null\"\n});\n\nvar links=Descriptor.match(document.body);\n```\n\n\n### Serializable\nDescriptor is easily serializable for portability.\n\n```javascript\nnew Descriptor({entityName:\"Task\", sortBy:\"dateCompleted\"})\n// becomes...\n /Task?predicate=&sortBy=dateCompleted\n```\n\nBecomes:\n```javascript\n{\n   entityName:\"Task\",\n   predicate: [\n      {dateDue}\n   ],\n   sortBy:\n}\n```\n\n### toQueryString()\n\nOutputs:\n\n    /Task?predicate={}&sortBy=dateCompleted\n\n\n### Extensible\n\n```javascript\nDescriptor.addComponent(\"ignore\", function(o){\n\n});\n```\n\n\nThe array extensions add the ability to filter a data structure based on the Descriptor definition.\n\n```javascript\n\nvar criteria={\n   entityName:\"Task\",\n   predicate:\"dateDue<$NOW\",\n   sortBy:\"dateDue\",\n   limit:5\n};\n\nvar filter=Descriptor.compile(criteria);\n\nvar top5OverdueTasks=filter(allTasks);\n```\n",
  "readmeFilename": "README.markdown",
  "repository": {
    "type": "git",
    "url": "git+https://collinbrewer@bitbucket.org/collinbrewer/descriptor.git"
  },
  "scripts": {
    "test": "mocha spec"
  },
  "version": "0.1.0"
}
